% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_child_app.R
\name{make_child_app}
\alias{make_child_app}
\title{Make Child app from Parent app with modules}
\usage{
make_child_app(
  parent_app_dir,
  child_app_dir,
  include_renv = FALSE,
  copy_jobs_dir = FALSE,
  include_meta_yaml = TRUE,
  job_file_type = "Rmd",
  framework = "none",
  overwrite = FALSE
)
}
\arguments{
\item{parent_app_dir}{\code{character} Path to existing parent app, including the parent app directory}

\item{child_app_dir}{\code{character} Path to new child app, including the child app directory}

\item{include_renv}{\code{logical} Include \code{renv} structure in child app or now. Default is \code{FALSE}}

\item{copy_jobs_dir}{\code{logical} Copy the \code{jobs} directory from the parent app (\code{TRUE})
or use jobs template in \code{matte/inst}. Default is \code{FALSE}}

\item{include_meta_yaml}{\code{logical} Include the template metadata yaml file in the child app. Default is \code{TRUE}}

\item{job_file_type}{\code{character} Type of job template to include ("Rmd" or "qmd"). Default is \code{Rmd}}

\item{framework}{\code{character} App framework used for child. Options are "golem", "rhino" or "none". Default is "none"}

\item{overwrite}{\code{logical} Allow function to overwrite existing child directory. Default is \code{FALSE}}
}
\description{
Make Child app from Parent app with modules
}
\examples{
\dontrun{
make_child_app(parent_app_dir = "inst/parentApp",
               child_app_dir = "~/childTest")


make_child_app(parent_app_dir = "inst/parentApp",
               child_app_dir = "~/childTest2",
               copy_jobs_dir = FALSE,
               include_renv = TRUE)

make_child_app(parent_app_dir = "inst/parentApp",
               child_app_dir = "~/childTest3",
               include_renv = TRUE,
               framework = "golem")
}

}
