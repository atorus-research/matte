[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Atorus Research, Inc. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maya Gans. Author, maintainer. Laura Maxwell. Author. Jiwan Heo. Author. Atorus Research LLC. Copyright holder. Mike Stackhouse. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gans M, Maxwell L, Heo J (2024). matte: Opinionated Backend Reusability Focused Considerations Shiny. R package version 0.0.0.9000.","code":"@Manual{,   title = {matte: Opinionated Backend and Reusability Focused Considerations for Shiny},   author = {Maya Gans and Laura Maxwell and Jiwan Heo},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"id_-matte----an-enterprise-shiny-manifesto","dir":"","previous_headings":"","what":"Opinionated Backend and Reusability Focused Considerations for Shiny","title":"Opinionated Backend and Reusability Focused Considerations for Shiny","text":"glamorous back-end considerations Shiny","code":""},{"path":"/index.html","id":"the-parent-child-app-relationship","dir":"","previous_headings":"","what":"The Parent-Child App Relationship","title":"Opinionated Backend and Reusability Focused Considerations for Shiny","text":"common paradigm ’ve come across desire create Shiny app used across different datasets different scoped access datasets. ’s also common data need transformation prior used application. reasons propose opinionated paradigm creating package Shiny modules, using package child repositories, data. Creating child repositories application instance solves problem changing editing code single place, persisting changes multiple endpoints, still allowing customization child application level. important industries pharma can go validation cycles use certain versions parent package clinical studies, experimental versions others. also allows bug fixes central location, rather forking Shiny app needing make changes multiple places.","code":""},{"path":"/index.html","id":"a-consistent-data-structure","dir":"","previous_headings":"","what":"A Consistent Data Structure","title":"Opinionated Backend and Reusability Focused Considerations for Shiny","text":"child repository app.R file root level, ui server function call modules parent. doesn’t limit child applications parent structure, modules parent assume certain data structure used within child applications. propose creating single object storing data.rds. {matte} paradigm create jobs folder data_prep.Rmd - takes raw data needed application manipulates generic structure needed apps. data different child repositories, ask? also include meta.yaml file, list key value pairs mapping columns application.","code":""},{"path":"/index.html","id":"an-example","dir":"","previous_headings":"","what":"An Example","title":"Opinionated Backend and Reusability Focused Considerations for Shiny","text":"can seem abstract, inst/examples ’ve included example paradigm: parentpkg package mod-chart mod-table child1 shiny application uses parentpkg’s modules well themeing data preperation file mtcars child2 shiny application uses iris child1 child2 look feel like come ecosystem branding, structure allows customization like including third module custom child2 may child1.","code":""},{"path":"/index.html","id":"can-i-use-this-with-other-shiny-frameworks","dir":"","previous_headings":"","what":"Can I use this with other Shiny frameworks?","title":"Opinionated Backend and Reusability Focused Considerations for Shiny","text":"jobs endpoint secondary application , can use {matte} paradigm children applications Rhino, Golem, native Shiny! limitation parent application must package can call within children.","code":""},{"path":"/index.html","id":"installation-and-use","dir":"","previous_headings":"","what":"Installation and Use","title":"Opinionated Backend and Reusability Focused Considerations for Shiny","text":"can install development version matte GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"atorus-research/matte\")"},{"path":"/reference/make_child_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Child app from Parent app with modules — make_child_app","title":"Make Child app from Parent app with modules — make_child_app","text":"Make Child app Parent app modules","code":""},{"path":"/reference/make_child_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Child app from Parent app with modules — make_child_app","text":"","code":"make_child_app(   parent_app_dir,   child_app_dir,   include_renv = FALSE,   copy_jobs_dir = FALSE,   include_meta_yaml = TRUE,   job_file_type = \"Rmd\",   framework = \"none\",   overwrite = FALSE )"},{"path":"/reference/make_child_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Child app from Parent app with modules — make_child_app","text":"parent_app_dir character Path existing parent app, including parent app directory child_app_dir character Path new child app, including child app directory include_renv logical Include renv structure child app now. Default FALSE copy_jobs_dir logical Copy jobs directory parent app (TRUE) use jobs template matte/inst. Default FALSE include_meta_yaml logical Include template metadata yaml file child app. Default TRUE job_file_type character Type job template include (\"Rmd\" \"qmd\"). Default Rmd framework character App framework used child. Options \"golem\", \"rhino\" \"none\". Default \"none\" overwrite logical Allow function overwrite existing child directory. Default FALSE","code":""},{"path":"/reference/make_child_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Child app from Parent app with modules — make_child_app","text":"","code":"if (FALSE) { # \\dontrun{ make_child_app(parent_app_dir = \"inst/parentApp\",                child_app_dir = \"~/childTest\")   make_child_app(parent_app_dir = \"inst/parentApp\",                child_app_dir = \"~/childTest2\",                copy_jobs_dir = FALSE,                include_renv = TRUE)  make_child_app(parent_app_dir = \"inst/parentApp\",                child_app_dir = \"~/childTest3\",                include_renv = TRUE,                framework = \"golem\") } # }"},{"path":"/reference/use_batch_jobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a jobs directory within the specified path — use_batch_jobs","title":"Create a jobs directory within the specified path — use_batch_jobs","text":"function creates directory named 'jobs' copies template files newly created directory. Either R Markdown, Quarto, types files can used templates.","code":""},{"path":"/reference/use_batch_jobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a jobs directory within the specified path — use_batch_jobs","text":"","code":"use_batch_jobs(path, template = c(\"rmarkdown\", \"quarto\"))"},{"path":"/reference/use_batch_jobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a jobs directory within the specified path — use_batch_jobs","text":"path Directory jobs directory created template Whether use R Markdown, quarto, types templates","code":""},{"path":"/reference/use_batch_jobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a jobs directory within the specified path — use_batch_jobs","text":"Path job directory created","code":""}]
